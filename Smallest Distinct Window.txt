    public:
    int findSubString(string str)
    {   
        int n = str.size();
            // transform(str.begin(), str.end(), str.begin(), ::toupper);

        unordered_map<char,int>m;
        int ans = INT_MAX;
        
        for(int i= 0 ;i<n;i++)
        {
            // cout<<str[i]<<" ";
            m[str[i]]++;
        }
            
        
        int k = m.size();

        m.clear();
        int i = 0;
        int j = 0;
        
        while(j<n)
        {
            m[str[j]]++;
            if(m.size() == k)
            {
                while(m.size() == k )
                {
                    if(m.size() == k) ans = min(ans,j-i+1);
                    
                     m[str[i]]--;
                    if(m[str[i]]==0){
                        m.erase(str[i]);
                    }
                    i++;
                    
                }
            }
            j++;
        }
        
        
        
        
        
        return ans;
    }   
};      